name: YourServiceName Service CI - Develop

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

env:
  deploy-port: 5050
  docker-image-name: ${{ github.event.repository.name }}
  APPID: ${{ secrets.APPID }}
  APPSECRET: ${{ secrets.APPSECRET }}
  DB_HOST: ${{ secrets.DB_HOST }}
  DB_PORT: ${{ secrets.DB_PORT }}
  DB_USER: ${{ secrets.DB_USER }}
  DB_PASS: ${{ secrets.DB_PASS }}
  DB_NAME: ${{ secrets.DB_NAME }}

jobs:
  docker:
    name: Docker Build, Push and Deploy
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Check APPID & APPSECRET for dev
        run:  |
          echo "$APPID"
          echo "$APPSECRET"
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.docker-image-name }}-dev:latest
          secrets: |
            DB_HOST=${{ env.DB_HOST }}
            DB_PORT=${{ env.DB_PORT }}
            DB_USER=${{ env.DB_USER }}
            DB_PASS=${{ env.DB_PASS }}
            DB_NAME=${{ env.DB_NAME }}
            APPID=${{ env.APPID }}
            APPSECRET=${{ env.APPSECRET }}
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST_YIJUNSTUDIO }}
          username: ${{ secrets.USERNAME_YIJUNSTUDIO }}
          key: ${{ secrets.SSHKEY_YIJUNSTUDIO }}
          command_timeout: 60m
          script: |
            echo $GITHUB_SHA
            sudo docker container ls
            echo ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.docker-image-name }}-dev:latest
            sudo docker container rm --force ${{ env.docker-image-name }}-dev
            sudo docker image rm --force ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.docker-image-name }}-dev
            sudo docker run --name ${{ env.docker-image-name }}-dev -p ${{ env.deploy-port }}:8888 -d ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.docker-image-name }}-dev:latest
